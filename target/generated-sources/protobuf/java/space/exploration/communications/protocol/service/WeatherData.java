// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WeatherData.proto

package space.exploration.communications.protocol.service;

public final class WeatherData {
  private WeatherData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WeatherPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:space.exploration.communications.protocol.service.WeatherPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string terrestrialDate = 1;</code>
     */
    java.lang.String getTerrestrialDate();
    /**
     * <code>string terrestrialDate = 1;</code>
     */
    com.google.protobuf.ByteString
        getTerrestrialDateBytes();

    /**
     * <code>int32 sol = 2;</code>
     */
    int getSol();

    /**
     * <code>double ls = 3;</code>
     */
    double getLs();

    /**
     * <code>double minTemp = 4;</code>
     */
    double getMinTemp();

    /**
     * <code>double minTemFahrenheit = 5;</code>
     */
    double getMinTemFahrenheit();

    /**
     * <code>double maxTemp = 6;</code>
     */
    double getMaxTemp();

    /**
     * <code>double maxTempFahrenheit = 7;</code>
     */
    double getMaxTempFahrenheit();

    /**
     * <code>double pressure = 8;</code>
     */
    double getPressure();

    /**
     * <code>string pressureDescription = 9;</code>
     */
    java.lang.String getPressureDescription();
    /**
     * <code>string pressureDescription = 9;</code>
     */
    com.google.protobuf.ByteString
        getPressureDescriptionBytes();

    /**
     * <code>string absoluteHumidity = 10;</code>
     */
    java.lang.String getAbsoluteHumidity();
    /**
     * <code>string absoluteHumidity = 10;</code>
     */
    com.google.protobuf.ByteString
        getAbsoluteHumidityBytes();

    /**
     * <code>string atmosphericOpacity = 11;</code>
     */
    java.lang.String getAtmosphericOpacity();
    /**
     * <code>string atmosphericOpacity = 11;</code>
     */
    com.google.protobuf.ByteString
        getAtmosphericOpacityBytes();

    /**
     * <code>string season = 12;</code>
     */
    java.lang.String getSeason();
    /**
     * <code>string season = 12;</code>
     */
    com.google.protobuf.ByteString
        getSeasonBytes();

    /**
     * <code>string sunrise = 13;</code>
     */
    java.lang.String getSunrise();
    /**
     * <code>string sunrise = 13;</code>
     */
    com.google.protobuf.ByteString
        getSunriseBytes();

    /**
     * <code>string sunset = 14;</code>
     */
    java.lang.String getSunset();
    /**
     * <code>string sunset = 14;</code>
     */
    com.google.protobuf.ByteString
        getSunsetBytes();

    /**
     * <code>double windSpeed = 15;</code>
     */
    double getWindSpeed();

    /**
     * <code>double windDirection = 16;</code>
     */
    double getWindDirection();
  }
  /**
   * Protobuf type {@code space.exploration.communications.protocol.service.WeatherPayload}
   */
  public  static final class WeatherPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:space.exploration.communications.protocol.service.WeatherPayload)
      WeatherPayloadOrBuilder {
    // Use WeatherPayload.newBuilder() to construct.
    private WeatherPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WeatherPayload() {
      terrestrialDate_ = "";
      sol_ = 0;
      ls_ = 0D;
      minTemp_ = 0D;
      minTemFahrenheit_ = 0D;
      maxTemp_ = 0D;
      maxTempFahrenheit_ = 0D;
      pressure_ = 0D;
      pressureDescription_ = "";
      absoluteHumidity_ = "";
      atmosphericOpacity_ = "";
      season_ = "";
      sunrise_ = "";
      sunset_ = "";
      windSpeed_ = 0D;
      windDirection_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private WeatherPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              terrestrialDate_ = s;
              break;
            }
            case 16: {

              sol_ = input.readInt32();
              break;
            }
            case 25: {

              ls_ = input.readDouble();
              break;
            }
            case 33: {

              minTemp_ = input.readDouble();
              break;
            }
            case 41: {

              minTemFahrenheit_ = input.readDouble();
              break;
            }
            case 49: {

              maxTemp_ = input.readDouble();
              break;
            }
            case 57: {

              maxTempFahrenheit_ = input.readDouble();
              break;
            }
            case 65: {

              pressure_ = input.readDouble();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              pressureDescription_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              absoluteHumidity_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              atmosphericOpacity_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              season_ = s;
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              sunrise_ = s;
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              sunset_ = s;
              break;
            }
            case 121: {

              windSpeed_ = input.readDouble();
              break;
            }
            case 129: {

              windDirection_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return space.exploration.communications.protocol.service.WeatherData.internal_static_space_exploration_communications_protocol_service_WeatherPayload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return space.exploration.communications.protocol.service.WeatherData.internal_static_space_exploration_communications_protocol_service_WeatherPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              space.exploration.communications.protocol.service.WeatherData.WeatherPayload.class, space.exploration.communications.protocol.service.WeatherData.WeatherPayload.Builder.class);
    }

    public static final int TERRESTRIALDATE_FIELD_NUMBER = 1;
    private volatile java.lang.Object terrestrialDate_;
    /**
     * <code>string terrestrialDate = 1;</code>
     */
    public java.lang.String getTerrestrialDate() {
      java.lang.Object ref = terrestrialDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        terrestrialDate_ = s;
        return s;
      }
    }
    /**
     * <code>string terrestrialDate = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTerrestrialDateBytes() {
      java.lang.Object ref = terrestrialDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        terrestrialDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOL_FIELD_NUMBER = 2;
    private int sol_;
    /**
     * <code>int32 sol = 2;</code>
     */
    public int getSol() {
      return sol_;
    }

    public static final int LS_FIELD_NUMBER = 3;
    private double ls_;
    /**
     * <code>double ls = 3;</code>
     */
    public double getLs() {
      return ls_;
    }

    public static final int MINTEMP_FIELD_NUMBER = 4;
    private double minTemp_;
    /**
     * <code>double minTemp = 4;</code>
     */
    public double getMinTemp() {
      return minTemp_;
    }

    public static final int MINTEMFAHRENHEIT_FIELD_NUMBER = 5;
    private double minTemFahrenheit_;
    /**
     * <code>double minTemFahrenheit = 5;</code>
     */
    public double getMinTemFahrenheit() {
      return minTemFahrenheit_;
    }

    public static final int MAXTEMP_FIELD_NUMBER = 6;
    private double maxTemp_;
    /**
     * <code>double maxTemp = 6;</code>
     */
    public double getMaxTemp() {
      return maxTemp_;
    }

    public static final int MAXTEMPFAHRENHEIT_FIELD_NUMBER = 7;
    private double maxTempFahrenheit_;
    /**
     * <code>double maxTempFahrenheit = 7;</code>
     */
    public double getMaxTempFahrenheit() {
      return maxTempFahrenheit_;
    }

    public static final int PRESSURE_FIELD_NUMBER = 8;
    private double pressure_;
    /**
     * <code>double pressure = 8;</code>
     */
    public double getPressure() {
      return pressure_;
    }

    public static final int PRESSUREDESCRIPTION_FIELD_NUMBER = 9;
    private volatile java.lang.Object pressureDescription_;
    /**
     * <code>string pressureDescription = 9;</code>
     */
    public java.lang.String getPressureDescription() {
      java.lang.Object ref = pressureDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pressureDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string pressureDescription = 9;</code>
     */
    public com.google.protobuf.ByteString
        getPressureDescriptionBytes() {
      java.lang.Object ref = pressureDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pressureDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ABSOLUTEHUMIDITY_FIELD_NUMBER = 10;
    private volatile java.lang.Object absoluteHumidity_;
    /**
     * <code>string absoluteHumidity = 10;</code>
     */
    public java.lang.String getAbsoluteHumidity() {
      java.lang.Object ref = absoluteHumidity_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        absoluteHumidity_ = s;
        return s;
      }
    }
    /**
     * <code>string absoluteHumidity = 10;</code>
     */
    public com.google.protobuf.ByteString
        getAbsoluteHumidityBytes() {
      java.lang.Object ref = absoluteHumidity_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        absoluteHumidity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATMOSPHERICOPACITY_FIELD_NUMBER = 11;
    private volatile java.lang.Object atmosphericOpacity_;
    /**
     * <code>string atmosphericOpacity = 11;</code>
     */
    public java.lang.String getAtmosphericOpacity() {
      java.lang.Object ref = atmosphericOpacity_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        atmosphericOpacity_ = s;
        return s;
      }
    }
    /**
     * <code>string atmosphericOpacity = 11;</code>
     */
    public com.google.protobuf.ByteString
        getAtmosphericOpacityBytes() {
      java.lang.Object ref = atmosphericOpacity_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        atmosphericOpacity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEASON_FIELD_NUMBER = 12;
    private volatile java.lang.Object season_;
    /**
     * <code>string season = 12;</code>
     */
    public java.lang.String getSeason() {
      java.lang.Object ref = season_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        season_ = s;
        return s;
      }
    }
    /**
     * <code>string season = 12;</code>
     */
    public com.google.protobuf.ByteString
        getSeasonBytes() {
      java.lang.Object ref = season_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        season_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUNRISE_FIELD_NUMBER = 13;
    private volatile java.lang.Object sunrise_;
    /**
     * <code>string sunrise = 13;</code>
     */
    public java.lang.String getSunrise() {
      java.lang.Object ref = sunrise_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sunrise_ = s;
        return s;
      }
    }
    /**
     * <code>string sunrise = 13;</code>
     */
    public com.google.protobuf.ByteString
        getSunriseBytes() {
      java.lang.Object ref = sunrise_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sunrise_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUNSET_FIELD_NUMBER = 14;
    private volatile java.lang.Object sunset_;
    /**
     * <code>string sunset = 14;</code>
     */
    public java.lang.String getSunset() {
      java.lang.Object ref = sunset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sunset_ = s;
        return s;
      }
    }
    /**
     * <code>string sunset = 14;</code>
     */
    public com.google.protobuf.ByteString
        getSunsetBytes() {
      java.lang.Object ref = sunset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sunset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WINDSPEED_FIELD_NUMBER = 15;
    private double windSpeed_;
    /**
     * <code>double windSpeed = 15;</code>
     */
    public double getWindSpeed() {
      return windSpeed_;
    }

    public static final int WINDDIRECTION_FIELD_NUMBER = 16;
    private double windDirection_;
    /**
     * <code>double windDirection = 16;</code>
     */
    public double getWindDirection() {
      return windDirection_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTerrestrialDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, terrestrialDate_);
      }
      if (sol_ != 0) {
        output.writeInt32(2, sol_);
      }
      if (ls_ != 0D) {
        output.writeDouble(3, ls_);
      }
      if (minTemp_ != 0D) {
        output.writeDouble(4, minTemp_);
      }
      if (minTemFahrenheit_ != 0D) {
        output.writeDouble(5, minTemFahrenheit_);
      }
      if (maxTemp_ != 0D) {
        output.writeDouble(6, maxTemp_);
      }
      if (maxTempFahrenheit_ != 0D) {
        output.writeDouble(7, maxTempFahrenheit_);
      }
      if (pressure_ != 0D) {
        output.writeDouble(8, pressure_);
      }
      if (!getPressureDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, pressureDescription_);
      }
      if (!getAbsoluteHumidityBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, absoluteHumidity_);
      }
      if (!getAtmosphericOpacityBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, atmosphericOpacity_);
      }
      if (!getSeasonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, season_);
      }
      if (!getSunriseBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, sunrise_);
      }
      if (!getSunsetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, sunset_);
      }
      if (windSpeed_ != 0D) {
        output.writeDouble(15, windSpeed_);
      }
      if (windDirection_ != 0D) {
        output.writeDouble(16, windDirection_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTerrestrialDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, terrestrialDate_);
      }
      if (sol_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sol_);
      }
      if (ls_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, ls_);
      }
      if (minTemp_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, minTemp_);
      }
      if (minTemFahrenheit_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, minTemFahrenheit_);
      }
      if (maxTemp_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, maxTemp_);
      }
      if (maxTempFahrenheit_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, maxTempFahrenheit_);
      }
      if (pressure_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, pressure_);
      }
      if (!getPressureDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, pressureDescription_);
      }
      if (!getAbsoluteHumidityBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, absoluteHumidity_);
      }
      if (!getAtmosphericOpacityBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, atmosphericOpacity_);
      }
      if (!getSeasonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, season_);
      }
      if (!getSunriseBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, sunrise_);
      }
      if (!getSunsetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, sunset_);
      }
      if (windSpeed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, windSpeed_);
      }
      if (windDirection_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, windDirection_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof space.exploration.communications.protocol.service.WeatherData.WeatherPayload)) {
        return super.equals(obj);
      }
      space.exploration.communications.protocol.service.WeatherData.WeatherPayload other = (space.exploration.communications.protocol.service.WeatherData.WeatherPayload) obj;

      boolean result = true;
      result = result && getTerrestrialDate()
          .equals(other.getTerrestrialDate());
      result = result && (getSol()
          == other.getSol());
      result = result && (
          java.lang.Double.doubleToLongBits(getLs())
          == java.lang.Double.doubleToLongBits(
              other.getLs()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMinTemp())
          == java.lang.Double.doubleToLongBits(
              other.getMinTemp()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMinTemFahrenheit())
          == java.lang.Double.doubleToLongBits(
              other.getMinTemFahrenheit()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxTemp())
          == java.lang.Double.doubleToLongBits(
              other.getMaxTemp()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxTempFahrenheit())
          == java.lang.Double.doubleToLongBits(
              other.getMaxTempFahrenheit()));
      result = result && (
          java.lang.Double.doubleToLongBits(getPressure())
          == java.lang.Double.doubleToLongBits(
              other.getPressure()));
      result = result && getPressureDescription()
          .equals(other.getPressureDescription());
      result = result && getAbsoluteHumidity()
          .equals(other.getAbsoluteHumidity());
      result = result && getAtmosphericOpacity()
          .equals(other.getAtmosphericOpacity());
      result = result && getSeason()
          .equals(other.getSeason());
      result = result && getSunrise()
          .equals(other.getSunrise());
      result = result && getSunset()
          .equals(other.getSunset());
      result = result && (
          java.lang.Double.doubleToLongBits(getWindSpeed())
          == java.lang.Double.doubleToLongBits(
              other.getWindSpeed()));
      result = result && (
          java.lang.Double.doubleToLongBits(getWindDirection())
          == java.lang.Double.doubleToLongBits(
              other.getWindDirection()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TERRESTRIALDATE_FIELD_NUMBER;
      hash = (53 * hash) + getTerrestrialDate().hashCode();
      hash = (37 * hash) + SOL_FIELD_NUMBER;
      hash = (53 * hash) + getSol();
      hash = (37 * hash) + LS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLs()));
      hash = (37 * hash) + MINTEMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinTemp()));
      hash = (37 * hash) + MINTEMFAHRENHEIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinTemFahrenheit()));
      hash = (37 * hash) + MAXTEMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxTemp()));
      hash = (37 * hash) + MAXTEMPFAHRENHEIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxTempFahrenheit()));
      hash = (37 * hash) + PRESSURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPressure()));
      hash = (37 * hash) + PRESSUREDESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getPressureDescription().hashCode();
      hash = (37 * hash) + ABSOLUTEHUMIDITY_FIELD_NUMBER;
      hash = (53 * hash) + getAbsoluteHumidity().hashCode();
      hash = (37 * hash) + ATMOSPHERICOPACITY_FIELD_NUMBER;
      hash = (53 * hash) + getAtmosphericOpacity().hashCode();
      hash = (37 * hash) + SEASON_FIELD_NUMBER;
      hash = (53 * hash) + getSeason().hashCode();
      hash = (37 * hash) + SUNRISE_FIELD_NUMBER;
      hash = (53 * hash) + getSunrise().hashCode();
      hash = (37 * hash) + SUNSET_FIELD_NUMBER;
      hash = (53 * hash) + getSunset().hashCode();
      hash = (37 * hash) + WINDSPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWindSpeed()));
      hash = (37 * hash) + WINDDIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWindDirection()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(space.exploration.communications.protocol.service.WeatherData.WeatherPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code space.exploration.communications.protocol.service.WeatherPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:space.exploration.communications.protocol.service.WeatherPayload)
        space.exploration.communications.protocol.service.WeatherData.WeatherPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return space.exploration.communications.protocol.service.WeatherData.internal_static_space_exploration_communications_protocol_service_WeatherPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return space.exploration.communications.protocol.service.WeatherData.internal_static_space_exploration_communications_protocol_service_WeatherPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                space.exploration.communications.protocol.service.WeatherData.WeatherPayload.class, space.exploration.communications.protocol.service.WeatherData.WeatherPayload.Builder.class);
      }

      // Construct using space.exploration.communications.protocol.service.WeatherData.WeatherPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        terrestrialDate_ = "";

        sol_ = 0;

        ls_ = 0D;

        minTemp_ = 0D;

        minTemFahrenheit_ = 0D;

        maxTemp_ = 0D;

        maxTempFahrenheit_ = 0D;

        pressure_ = 0D;

        pressureDescription_ = "";

        absoluteHumidity_ = "";

        atmosphericOpacity_ = "";

        season_ = "";

        sunrise_ = "";

        sunset_ = "";

        windSpeed_ = 0D;

        windDirection_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return space.exploration.communications.protocol.service.WeatherData.internal_static_space_exploration_communications_protocol_service_WeatherPayload_descriptor;
      }

      public space.exploration.communications.protocol.service.WeatherData.WeatherPayload getDefaultInstanceForType() {
        return space.exploration.communications.protocol.service.WeatherData.WeatherPayload.getDefaultInstance();
      }

      public space.exploration.communications.protocol.service.WeatherData.WeatherPayload build() {
        space.exploration.communications.protocol.service.WeatherData.WeatherPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public space.exploration.communications.protocol.service.WeatherData.WeatherPayload buildPartial() {
        space.exploration.communications.protocol.service.WeatherData.WeatherPayload result = new space.exploration.communications.protocol.service.WeatherData.WeatherPayload(this);
        result.terrestrialDate_ = terrestrialDate_;
        result.sol_ = sol_;
        result.ls_ = ls_;
        result.minTemp_ = minTemp_;
        result.minTemFahrenheit_ = minTemFahrenheit_;
        result.maxTemp_ = maxTemp_;
        result.maxTempFahrenheit_ = maxTempFahrenheit_;
        result.pressure_ = pressure_;
        result.pressureDescription_ = pressureDescription_;
        result.absoluteHumidity_ = absoluteHumidity_;
        result.atmosphericOpacity_ = atmosphericOpacity_;
        result.season_ = season_;
        result.sunrise_ = sunrise_;
        result.sunset_ = sunset_;
        result.windSpeed_ = windSpeed_;
        result.windDirection_ = windDirection_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof space.exploration.communications.protocol.service.WeatherData.WeatherPayload) {
          return mergeFrom((space.exploration.communications.protocol.service.WeatherData.WeatherPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(space.exploration.communications.protocol.service.WeatherData.WeatherPayload other) {
        if (other == space.exploration.communications.protocol.service.WeatherData.WeatherPayload.getDefaultInstance()) return this;
        if (!other.getTerrestrialDate().isEmpty()) {
          terrestrialDate_ = other.terrestrialDate_;
          onChanged();
        }
        if (other.getSol() != 0) {
          setSol(other.getSol());
        }
        if (other.getLs() != 0D) {
          setLs(other.getLs());
        }
        if (other.getMinTemp() != 0D) {
          setMinTemp(other.getMinTemp());
        }
        if (other.getMinTemFahrenheit() != 0D) {
          setMinTemFahrenheit(other.getMinTemFahrenheit());
        }
        if (other.getMaxTemp() != 0D) {
          setMaxTemp(other.getMaxTemp());
        }
        if (other.getMaxTempFahrenheit() != 0D) {
          setMaxTempFahrenheit(other.getMaxTempFahrenheit());
        }
        if (other.getPressure() != 0D) {
          setPressure(other.getPressure());
        }
        if (!other.getPressureDescription().isEmpty()) {
          pressureDescription_ = other.pressureDescription_;
          onChanged();
        }
        if (!other.getAbsoluteHumidity().isEmpty()) {
          absoluteHumidity_ = other.absoluteHumidity_;
          onChanged();
        }
        if (!other.getAtmosphericOpacity().isEmpty()) {
          atmosphericOpacity_ = other.atmosphericOpacity_;
          onChanged();
        }
        if (!other.getSeason().isEmpty()) {
          season_ = other.season_;
          onChanged();
        }
        if (!other.getSunrise().isEmpty()) {
          sunrise_ = other.sunrise_;
          onChanged();
        }
        if (!other.getSunset().isEmpty()) {
          sunset_ = other.sunset_;
          onChanged();
        }
        if (other.getWindSpeed() != 0D) {
          setWindSpeed(other.getWindSpeed());
        }
        if (other.getWindDirection() != 0D) {
          setWindDirection(other.getWindDirection());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        space.exploration.communications.protocol.service.WeatherData.WeatherPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (space.exploration.communications.protocol.service.WeatherData.WeatherPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object terrestrialDate_ = "";
      /**
       * <code>string terrestrialDate = 1;</code>
       */
      public java.lang.String getTerrestrialDate() {
        java.lang.Object ref = terrestrialDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          terrestrialDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string terrestrialDate = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTerrestrialDateBytes() {
        java.lang.Object ref = terrestrialDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          terrestrialDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string terrestrialDate = 1;</code>
       */
      public Builder setTerrestrialDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        terrestrialDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string terrestrialDate = 1;</code>
       */
      public Builder clearTerrestrialDate() {
        
        terrestrialDate_ = getDefaultInstance().getTerrestrialDate();
        onChanged();
        return this;
      }
      /**
       * <code>string terrestrialDate = 1;</code>
       */
      public Builder setTerrestrialDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        terrestrialDate_ = value;
        onChanged();
        return this;
      }

      private int sol_ ;
      /**
       * <code>int32 sol = 2;</code>
       */
      public int getSol() {
        return sol_;
      }
      /**
       * <code>int32 sol = 2;</code>
       */
      public Builder setSol(int value) {
        
        sol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sol = 2;</code>
       */
      public Builder clearSol() {
        
        sol_ = 0;
        onChanged();
        return this;
      }

      private double ls_ ;
      /**
       * <code>double ls = 3;</code>
       */
      public double getLs() {
        return ls_;
      }
      /**
       * <code>double ls = 3;</code>
       */
      public Builder setLs(double value) {
        
        ls_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double ls = 3;</code>
       */
      public Builder clearLs() {
        
        ls_ = 0D;
        onChanged();
        return this;
      }

      private double minTemp_ ;
      /**
       * <code>double minTemp = 4;</code>
       */
      public double getMinTemp() {
        return minTemp_;
      }
      /**
       * <code>double minTemp = 4;</code>
       */
      public Builder setMinTemp(double value) {
        
        minTemp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double minTemp = 4;</code>
       */
      public Builder clearMinTemp() {
        
        minTemp_ = 0D;
        onChanged();
        return this;
      }

      private double minTemFahrenheit_ ;
      /**
       * <code>double minTemFahrenheit = 5;</code>
       */
      public double getMinTemFahrenheit() {
        return minTemFahrenheit_;
      }
      /**
       * <code>double minTemFahrenheit = 5;</code>
       */
      public Builder setMinTemFahrenheit(double value) {
        
        minTemFahrenheit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double minTemFahrenheit = 5;</code>
       */
      public Builder clearMinTemFahrenheit() {
        
        minTemFahrenheit_ = 0D;
        onChanged();
        return this;
      }

      private double maxTemp_ ;
      /**
       * <code>double maxTemp = 6;</code>
       */
      public double getMaxTemp() {
        return maxTemp_;
      }
      /**
       * <code>double maxTemp = 6;</code>
       */
      public Builder setMaxTemp(double value) {
        
        maxTemp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double maxTemp = 6;</code>
       */
      public Builder clearMaxTemp() {
        
        maxTemp_ = 0D;
        onChanged();
        return this;
      }

      private double maxTempFahrenheit_ ;
      /**
       * <code>double maxTempFahrenheit = 7;</code>
       */
      public double getMaxTempFahrenheit() {
        return maxTempFahrenheit_;
      }
      /**
       * <code>double maxTempFahrenheit = 7;</code>
       */
      public Builder setMaxTempFahrenheit(double value) {
        
        maxTempFahrenheit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double maxTempFahrenheit = 7;</code>
       */
      public Builder clearMaxTempFahrenheit() {
        
        maxTempFahrenheit_ = 0D;
        onChanged();
        return this;
      }

      private double pressure_ ;
      /**
       * <code>double pressure = 8;</code>
       */
      public double getPressure() {
        return pressure_;
      }
      /**
       * <code>double pressure = 8;</code>
       */
      public Builder setPressure(double value) {
        
        pressure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pressure = 8;</code>
       */
      public Builder clearPressure() {
        
        pressure_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object pressureDescription_ = "";
      /**
       * <code>string pressureDescription = 9;</code>
       */
      public java.lang.String getPressureDescription() {
        java.lang.Object ref = pressureDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pressureDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string pressureDescription = 9;</code>
       */
      public com.google.protobuf.ByteString
          getPressureDescriptionBytes() {
        java.lang.Object ref = pressureDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pressureDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string pressureDescription = 9;</code>
       */
      public Builder setPressureDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pressureDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string pressureDescription = 9;</code>
       */
      public Builder clearPressureDescription() {
        
        pressureDescription_ = getDefaultInstance().getPressureDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string pressureDescription = 9;</code>
       */
      public Builder setPressureDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pressureDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object absoluteHumidity_ = "";
      /**
       * <code>string absoluteHumidity = 10;</code>
       */
      public java.lang.String getAbsoluteHumidity() {
        java.lang.Object ref = absoluteHumidity_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          absoluteHumidity_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string absoluteHumidity = 10;</code>
       */
      public com.google.protobuf.ByteString
          getAbsoluteHumidityBytes() {
        java.lang.Object ref = absoluteHumidity_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          absoluteHumidity_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string absoluteHumidity = 10;</code>
       */
      public Builder setAbsoluteHumidity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        absoluteHumidity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string absoluteHumidity = 10;</code>
       */
      public Builder clearAbsoluteHumidity() {
        
        absoluteHumidity_ = getDefaultInstance().getAbsoluteHumidity();
        onChanged();
        return this;
      }
      /**
       * <code>string absoluteHumidity = 10;</code>
       */
      public Builder setAbsoluteHumidityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        absoluteHumidity_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object atmosphericOpacity_ = "";
      /**
       * <code>string atmosphericOpacity = 11;</code>
       */
      public java.lang.String getAtmosphericOpacity() {
        java.lang.Object ref = atmosphericOpacity_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          atmosphericOpacity_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string atmosphericOpacity = 11;</code>
       */
      public com.google.protobuf.ByteString
          getAtmosphericOpacityBytes() {
        java.lang.Object ref = atmosphericOpacity_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          atmosphericOpacity_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string atmosphericOpacity = 11;</code>
       */
      public Builder setAtmosphericOpacity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        atmosphericOpacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string atmosphericOpacity = 11;</code>
       */
      public Builder clearAtmosphericOpacity() {
        
        atmosphericOpacity_ = getDefaultInstance().getAtmosphericOpacity();
        onChanged();
        return this;
      }
      /**
       * <code>string atmosphericOpacity = 11;</code>
       */
      public Builder setAtmosphericOpacityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        atmosphericOpacity_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object season_ = "";
      /**
       * <code>string season = 12;</code>
       */
      public java.lang.String getSeason() {
        java.lang.Object ref = season_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          season_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string season = 12;</code>
       */
      public com.google.protobuf.ByteString
          getSeasonBytes() {
        java.lang.Object ref = season_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          season_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string season = 12;</code>
       */
      public Builder setSeason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        season_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string season = 12;</code>
       */
      public Builder clearSeason() {
        
        season_ = getDefaultInstance().getSeason();
        onChanged();
        return this;
      }
      /**
       * <code>string season = 12;</code>
       */
      public Builder setSeasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        season_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sunrise_ = "";
      /**
       * <code>string sunrise = 13;</code>
       */
      public java.lang.String getSunrise() {
        java.lang.Object ref = sunrise_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sunrise_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sunrise = 13;</code>
       */
      public com.google.protobuf.ByteString
          getSunriseBytes() {
        java.lang.Object ref = sunrise_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sunrise_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sunrise = 13;</code>
       */
      public Builder setSunrise(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sunrise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sunrise = 13;</code>
       */
      public Builder clearSunrise() {
        
        sunrise_ = getDefaultInstance().getSunrise();
        onChanged();
        return this;
      }
      /**
       * <code>string sunrise = 13;</code>
       */
      public Builder setSunriseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sunrise_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sunset_ = "";
      /**
       * <code>string sunset = 14;</code>
       */
      public java.lang.String getSunset() {
        java.lang.Object ref = sunset_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sunset_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sunset = 14;</code>
       */
      public com.google.protobuf.ByteString
          getSunsetBytes() {
        java.lang.Object ref = sunset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sunset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sunset = 14;</code>
       */
      public Builder setSunset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sunset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sunset = 14;</code>
       */
      public Builder clearSunset() {
        
        sunset_ = getDefaultInstance().getSunset();
        onChanged();
        return this;
      }
      /**
       * <code>string sunset = 14;</code>
       */
      public Builder setSunsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sunset_ = value;
        onChanged();
        return this;
      }

      private double windSpeed_ ;
      /**
       * <code>double windSpeed = 15;</code>
       */
      public double getWindSpeed() {
        return windSpeed_;
      }
      /**
       * <code>double windSpeed = 15;</code>
       */
      public Builder setWindSpeed(double value) {
        
        windSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double windSpeed = 15;</code>
       */
      public Builder clearWindSpeed() {
        
        windSpeed_ = 0D;
        onChanged();
        return this;
      }

      private double windDirection_ ;
      /**
       * <code>double windDirection = 16;</code>
       */
      public double getWindDirection() {
        return windDirection_;
      }
      /**
       * <code>double windDirection = 16;</code>
       */
      public Builder setWindDirection(double value) {
        
        windDirection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double windDirection = 16;</code>
       */
      public Builder clearWindDirection() {
        
        windDirection_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:space.exploration.communications.protocol.service.WeatherPayload)
    }

    // @@protoc_insertion_point(class_scope:space.exploration.communications.protocol.service.WeatherPayload)
    private static final space.exploration.communications.protocol.service.WeatherData.WeatherPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new space.exploration.communications.protocol.service.WeatherData.WeatherPayload();
    }

    public static space.exploration.communications.protocol.service.WeatherData.WeatherPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WeatherPayload>
        PARSER = new com.google.protobuf.AbstractParser<WeatherPayload>() {
      public WeatherPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new WeatherPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WeatherPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WeatherPayload> getParserForType() {
      return PARSER;
    }

    public space.exploration.communications.protocol.service.WeatherData.WeatherPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_space_exploration_communications_protocol_service_WeatherPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_space_exploration_communications_protocol_service_WeatherPayload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021WeatherData.proto\0221space.exploration.c" +
      "ommunications.protocol.service\"\331\002\n\016Weath" +
      "erPayload\022\027\n\017terrestrialDate\030\001 \001(\t\022\013\n\003so" +
      "l\030\002 \001(\005\022\n\n\002ls\030\003 \001(\001\022\017\n\007minTemp\030\004 \001(\001\022\030\n\020" +
      "minTemFahrenheit\030\005 \001(\001\022\017\n\007maxTemp\030\006 \001(\001\022" +
      "\031\n\021maxTempFahrenheit\030\007 \001(\001\022\020\n\010pressure\030\010" +
      " \001(\001\022\033\n\023pressureDescription\030\t \001(\t\022\030\n\020abs" +
      "oluteHumidity\030\n \001(\t\022\032\n\022atmosphericOpacit" +
      "y\030\013 \001(\t\022\016\n\006season\030\014 \001(\t\022\017\n\007sunrise\030\r \001(\t" +
      "\022\016\n\006sunset\030\016 \001(\t\022\021\n\twindSpeed\030\017 \001(\001\022\025\n\rw",
      "indDirection\030\020 \001(\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_space_exploration_communications_protocol_service_WeatherPayload_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_space_exploration_communications_protocol_service_WeatherPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_space_exploration_communications_protocol_service_WeatherPayload_descriptor,
        new java.lang.String[] { "TerrestrialDate", "Sol", "Ls", "MinTemp", "MinTemFahrenheit", "MaxTemp", "MaxTempFahrenheit", "Pressure", "PressureDescription", "AbsoluteHumidity", "AtmosphericOpacity", "Season", "Sunrise", "Sunset", "WindSpeed", "WindDirection", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
